
Websockets Installation

Steps:
Create AWS EC2 instance

Prepare EC2 Instance
sudo apt-get update
sudo apt-get upgrade 


Install Dependencies

3.1 Install PHP 8
https://computingforgeeks.com/how-to-install-php-on-ubuntu-2/

sudo apt install lsb-release ca-certificates apt-transport-https software-properties-common -y
sudo add-apt-repository ppa:ondrej/php
sudo apt install php8.1	
php -v
	
	Install PHP Extensions: We installed both 8.0 and 8.1.

sudo apt install php8.0-<extension>
Some available extensions are as shown below:

sudo apt install php8.1-curl  php8.1-xml  php8.1-intl  php8.1-cli  php8.1-mbstring php8.1-mysql  php8.1-zip  php8.1-common  php8.1-gd 

sudo apt install php8.0-xml  php8.0-intl  php8.0-cli  php8.0-mbstring  php8.0-mysql  php8.0-zip  php8.0-common  php8.0-gd php8.0-dom php8.0-curl 
 	
3.2 Install Apache2
https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-20-04

sudo apt update
sudo apt install apache2
sudo systemctl status apache2
http://reachapp.ga

Create new virtual host
sudo mkdir /var/www/reachapp
sudo chown -R www-data:ubuntu /var/www/reachapp
sudo chmod -R 755 /var/www/reachapp

sudo vi /var/www/reachapp/index.html

Paste the values below in to your index.html file
<html>
    <head>
        <title>Welcome to REACHAPP!</title>
    </head>
    <body>
        <h1>Success!  The REACHAPP virtual host is working!</h1>
    </body>
</html>

sudo vi /etc/apache2/sites-available/reachapp.conf

Paste this the values to your reachapp.conf

<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    ServerName reachapp.ga
    ServerAlias www.reachapp.ga
    DocumentRoot /var/www/reachapp
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

sudo a2ensite reachapp.conf
sudo systemctl reload apache2
sudo a2dissite 000-default.conf
sudo systemctl reload apache2
sudo apache2ctl configtest
sudo systemctl restart apache2

http://reachapp.ga


Note: You can skip to step 5 here if you want.

3.3 Install Composer 
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-composer-on-ubuntu-20-04

	sudo apt update
	sudo apt install php-cli unzip
	
	cd ~
curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php

sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

composer
 
Create a Laravel project 
https://laravel.com/docs/9.x/installation
 
composer create-project laravel/laravel  reachapp
	
Notes:
Add port 8000, 6001 to AWS security groups, before testing sample application.

 
3.4 MySQL installation 
https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04

 	Create database:
sudo mysql -u root -p
create database reachapp; 

Create database user:
create user 'reachappuser'@'localhost' identified by 'reachapppw';

grant all privileges on *.* to 'reachappuser'@'localhost';
flush privileges; 

	Update .env file
Set broadcast to pusher
BROADCAST_DRIVER=pusher
Change database details
DB_DATABASE=reachapp
DB_USERNAME=reachappuser
DB_PASSWORD=reachapppw

Change pusher keys
PUSHER_APP_ID=anyID
PUSHER_APP_KEY=anyKey
PUSHER_APP_SECRET=anySecret

#########################################
LARAVEL WEBSOCKET INSTALLATION 

https://beyondco.de/docs/laravel-websockets/getting-started/introduction
https://beyondco.de/docs/laravel-websockets/getting-started/installation

composer require beyondcode/laravel-websockets

php artisan vendor:publish --provider="BeyondCode\LaravelWebSockets\WebSocketsServiceProvider" --tag="migrations"

php artisan migrate

php artisan vendor:publish --provider="BeyondCode\LaravelWebSockets\WebSocketsServiceProvider" --tag="config"

less config/websockets.php 


#########################################
PUSHER REPLACEMENT
https://beyondco.de/docs/laravel-websockets/basic-usage/pusher


composer require pusher/pusher-php-server "~5.0"

grep BROADCAST_DRIVER .env 


vi config/broadcasting.php
'pusher' => [
    'driver' => 'pusher',
    'key' => env('PUSHER_APP_KEY'),
    'secret' => env('PUSHER_APP_SECRET'),
    'app_id' => env('PUSHER_APP_ID'),
    'options' => [
        	
'cluster' => env('PUSHER_APP_CLUSTER'),
        'encrypted' => true,
        'host' => '127.0.0.1',
        'port' => 6001,
        'scheme' => 'http'
    ],
],


vi config/websockets.php
apps' => [
    [
        'id' => env('PUSHER_APP_ID'),
        'name' => env('APP_NAME'),
        'key' => env('PUSHER_APP_KEY'),
        'secret' => env('PUSHER_APP_SECRET'),
        'enable_client_messages' => false,
        'enable_statistics' => true,
    ],
],


#########################################
START WEBSOCKET SERVER 

cd ~/reachapp

chmod -R 777 storage bootstrap/cache 
 
php artisan websockets:serve --host=0.0.0.0 

Command to run websockets:
sudo php artisan websockets:serve --host=0.0.0.0
sudo php artisan serve --host=0.0.0.0 


#########################################
CREATE AMI in AWS 




#########################################
INSTALL SUPERVISOR 

Using Supervisor to run artisan websockets:serve – Optional
https://beyondco.de/docs/laravel-websockets/basic-usage/starting
	
	Configure supervisor config file:

apt install supervisor

vi /etc/supervisor/conf.d/websockets.conf

[program:laravel-websockets]
command=/usr/bin/php /home/ubuntu/reachapp/artisan websockets:serve --host=0.0.0.0 --port=6001
numprocs=1
user=root
autostart=true
autorestart=true
stderr_logfile=/var/log/websockets.err.log
stdout_logfile=/var/log/websockets.out.log

Test websocket again using the browser.


#########################################
ENABLE SSL  

Update Apache2 config file:  

sudo vi /etc/apache2/sites-available/reachapp.conf

ServerAdmin webmaster@localhost
        DocumentRoot /home/ubuntu/reachapp/public

        <Directory /home/ubuntu/reachapp/public>
            Options Indexes FollowSymLinks MultiViews
            AllowOverride All
            Require all granted
         </Directory>

sudo apache2ctl configtest

sudo systemctl reload apache2


https://www.digitalocean.com/community/tutorials/how-to-rewrite-urls-with-mod_rewrite-for-apache-on-ubuntu-20-04

sudo a2enmod rewrite

sudo systemctl reload apache2

sudo systemctl restart apache2

Test if app and websockets are working:

this link should redirect to the https location: 
reachapp.ga/laravel-websockets


Update .env file
APP_URL=http://reachapp.ga


Run Websockets serve command.
Test the app and websockets using domain name:


http://reachapp.ga
http://reachapp.ga/laravel-websockets



SSL configuration 

https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04

apt install certbot python3-certbot-apache

sudo apache2ctl configtest

sudo systemctl reload apache2

sudo certbot --apache
Enter email
Choose domain
Choose Redirect (2)

Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/cmws.allhumans.one/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/cmws.allhumans.one/privkey.pem
   Your cert will expire on 2022-07-30. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot again
   with the "certonly" option. To non-interactively renew *all* of
   your certificates, run "certbot renew"

	Update .env file.
APP_URL=https://yourdomain
LARAVEL_WEBSOCKETS_SSL_LOCAL_CERT=/etc/letsencrypt/live/cmws.allhumans.one/fullchain.pem
LARAVEL_WEBSOCKETS_SSL_LOCAL_PK=/etc/letsencrypt/live/cmws.allhumans.one/privkey.pem

Add this to your config/websockets.php ssl array section
'verify_peer' => false,

Update your config/broadcasting.php (useTLS and scheme = https)

'connections' => [

        'pusher' => [
            'driver' => 'pusher',
            'key' => env('PUSHER_APP_KEY'),
            'secret' => env('PUSHER_APP_SECRET'),
            'app_id' => env('PUSHER_APP_ID'),
            'options' => [
                'cluster' => env('PUSHER_APP_CLUSTER'),
                'useTLS' => true,
                'encrypted' => true,
                'host' => '127.0.0.1',
                'port' => 6001,
                'scheme' => 'https'
            ],
            'client_options' => [

Notes: 
Run artisan websockets:serve using sudo to access cert folders or
Change ownership of project owner to www-data user 


Commands to run supervisor:
sudo systemctl stop supervisor
sudo systemctl start supervisor

Test in piesocket
https://www.piesocket.com/websocket-tester

Note: it only accepts ssl / wss

Sample entry to put in the tester:

wss://ws.allhumans.one:6001/app/anyKey?protocol=7&client=js&version=4.4.0&flash=false


For testing/reference, here are the websocket servers and chat client that our team created:

Websocket Servers:
https://ws.allhumans.one
https://reach-demo.ml


Reach Chat applications:
https://reachws.allhumans.one  → this one points to Websocket Server 1
https://clientws.reach-demo.ml → This one points to Websocket Server 2


.env file from WebSocket Server:

APP_NAME=Laravel
APP_ENV=local
APP_KEY=base64:q6X058tTpV6R2py/pfguBM2uBe9gahsKSmWmAdej0cc=
APP_DEBUG=true
APP_URL=https://reach-demo.ml

LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=wsreachdemo
DB_USERNAME=wsreachdemo
DB_PASSWORD=password

BROADCAST_DRIVER=pusher
CACHE_DRIVER=file
FILESYSTEM_DISK=local
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

PUSHER_APP_ID=anyID
PUSHER_APP_KEY=anyKey
PUSHER_APP_SECRET=anySecret
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

LARAVEL_WEBSOCKETS_SSL_LOCAL_CERT=/etc/letsencrypt/live/reachapp.ga/fullchain.pem
LARAVEL_WEBSOCKETS_SSL_LOCAL_PK=/etc/letsencrypt/live/reachapp.ga/privkey.pem


IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/reachapp.ga/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/reachapp.ga/privkey.pem
   Your cert will expire on 2022-08-01. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot again
   with the "certonly" option. To non-interactively renew *all* of
   your certificates, run "certbot renew"
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le


